{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PermissionFile",
  "description": "Permission file that can define a default permission, a set of permissions or a list of inlined permissions.",
  "type": "object",
  "properties": {
    "default": {
      "description": "The default permission set for the plugin",
      "anyOf": [
        {
          "$ref": "#/definitions/DefaultPermission"
        },
        {
          "type": "null"
        }
      ]
    },
    "set": {
      "description": "A list of permissions sets defined",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PermissionSet"
      }
    },
    "permission": {
      "description": "A list of inlined permissions",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Permission"
      }
    }
  },
  "definitions": {
    "DefaultPermission": {
      "description": "The default permission set of the plugin.\n\nWorks similarly to a permission with the \"default\" identifier.",
      "type": "object",
      "required": [
        "permissions"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri convention is to use `<h4>` headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionSet": {
      "description": "A set of direct permissions grouped together under a new name.",
      "type": "object",
      "required": [
        "description",
        "identifier",
        "permissions"
      ],
      "properties": {
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": "string"
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionKind"
          }
        }
      }
    },
    "Permission": {
      "description": "Descriptions of explicit privileges of commands.\n\nIt can enable commands to be accessible in the frontend of the application.\n\nIf the scope is defined it can be used to fine grain control the access of individual or multiple commands.",
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri internal convention is to use `<h4>` headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "commands": {
          "description": "Allowed or denied commands when using this permission.",
          "default": {
            "allow": [],
            "deny": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/Commands"
            }
          ]
        },
        "scope": {
          "description": "Allowed or denied scoped when using this permission.",
          "allOf": [
            {
              "$ref": "#/definitions/Scopes"
            }
          ]
        },
        "platforms": {
          "description": "Target platforms this permission applies. By default all platforms are affected by this permission.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Target"
          }
        }
      }
    },
    "Commands": {
      "description": "Allowed and denied commands inside a permission.\n\nIf two commands clash inside of `allow` and `deny`, it should be denied by default.",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Allowed command.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deny": {
          "description": "Denied command, which takes priority.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Scopes": {
      "description": "An argument for fine grained behavior control of Tauri commands.\n\nIt can be of any serde serializable type and is used to allow or prevent certain actions inside a Tauri command. The configured scope is passed to the command and will be enforced by the command implementation.\n\n## Example\n\n```json { \"allow\": [{ \"path\": \"$HOME/**\" }], \"deny\": [{ \"path\": \"$HOME/secret.txt\" }] } ```",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Data that defines what is allowed by the scope.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        "deny": {
          "description": "Data that defines what is denied by the scope. This should be prioritized by validation logic.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "Value": {
      "description": "All supported ACL values.",
      "anyOf": [
        {
          "description": "Represents a null JSON value.",
          "type": "null"
        },
        {
          "description": "Represents a [`bool`].",
          "type": "boolean"
        },
        {
          "description": "Represents a valid ACL [`Number`].",
          "allOf": [
            {
              "$ref": "#/definitions/Number"
            }
          ]
        },
        {
          "description": "Represents a [`String`].",
          "type": "string"
        },
        {
          "description": "Represents a list of other [`Value`]s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        {
          "description": "Represents a map of [`String`] keys to [`Value`]s.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        }
      ]
    },
    "Number": {
      "description": "A valid ACL number.",
      "anyOf": [
        {
          "description": "Represents an [`i64`].",
          "type": "integer",
          "format": "int64"
        },
        {
          "description": "Represents a [`f64`].",
          "type": "number",
          "format": "double"
        }
      ]
    },
    "Target": {
      "description": "Platform target.",
      "oneOf": [
        {
          "description": "MacOS.",
          "type": "string",
          "enum": [
            "macOS"
          ]
        },
        {
          "description": "Windows.",
          "type": "string",
          "enum": [
            "windows"
          ]
        },
        {
          "description": "Linux.",
          "type": "string",
          "enum": [
            "linux"
          ]
        },
        {
          "description": "Android.",
          "type": "string",
          "enum": [
            "android"
          ]
        },
        {
          "description": "iOS.",
          "type": "string",
          "enum": [
            "iOS"
          ]
        }
      ]
    },
    "PermissionKind": {
      "type": "string",
      "oneOf": [
        {
          "description": "Enables the add_service command without any pre-configured scope.",
          "type": "string",
          "const": "allow-add-service",
          "markdownDescription": "Enables the add_service command without any pre-configured scope."
        },
        {
          "description": "Denies the add_service command without any pre-configured scope.",
          "type": "string",
          "const": "deny-add-service",
          "markdownDescription": "Denies the add_service command without any pre-configured scope."
        },
        {
          "description": "Enables the connect_peripheral command without any pre-configured scope.",
          "type": "string",
          "const": "allow-connect-peripheral",
          "markdownDescription": "Enables the connect_peripheral command without any pre-configured scope."
        },
        {
          "description": "Denies the connect_peripheral command without any pre-configured scope.",
          "type": "string",
          "const": "deny-connect-peripheral",
          "markdownDescription": "Denies the connect_peripheral command without any pre-configured scope."
        },
        {
          "description": "Enables the disconnect_peripheral command without any pre-configured scope.",
          "type": "string",
          "const": "allow-disconnect-peripheral",
          "markdownDescription": "Enables the disconnect_peripheral command without any pre-configured scope."
        },
        {
          "description": "Denies the disconnect_peripheral command without any pre-configured scope.",
          "type": "string",
          "const": "deny-disconnect-peripheral",
          "markdownDescription": "Denies the disconnect_peripheral command without any pre-configured scope."
        },
        {
          "description": "Enables the discover_characteristics command without any pre-configured scope.",
          "type": "string",
          "const": "allow-discover-characteristics",
          "markdownDescription": "Enables the discover_characteristics command without any pre-configured scope."
        },
        {
          "description": "Denies the discover_characteristics command without any pre-configured scope.",
          "type": "string",
          "const": "deny-discover-characteristics",
          "markdownDescription": "Denies the discover_characteristics command without any pre-configured scope."
        },
        {
          "description": "Enables the discover_services command without any pre-configured scope.",
          "type": "string",
          "const": "allow-discover-services",
          "markdownDescription": "Enables the discover_services command without any pre-configured scope."
        },
        {
          "description": "Denies the discover_services command without any pre-configured scope.",
          "type": "string",
          "const": "deny-discover-services",
          "markdownDescription": "Denies the discover_services command without any pre-configured scope."
        },
        {
          "description": "Enables the get_authorization_status command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-authorization-status",
          "markdownDescription": "Enables the get_authorization_status command without any pre-configured scope."
        },
        {
          "description": "Denies the get_authorization_status command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-authorization-status",
          "markdownDescription": "Denies the get_authorization_status command without any pre-configured scope."
        },
        {
          "description": "Enables the get_connected_peripherals command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-connected-peripherals",
          "markdownDescription": "Enables the get_connected_peripherals command without any pre-configured scope."
        },
        {
          "description": "Denies the get_connected_peripherals command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-connected-peripherals",
          "markdownDescription": "Denies the get_connected_peripherals command without any pre-configured scope."
        },
        {
          "description": "Enables the get_discovered_peripherals command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-discovered-peripherals",
          "markdownDescription": "Enables the get_discovered_peripherals command without any pre-configured scope."
        },
        {
          "description": "Denies the get_discovered_peripherals command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-discovered-peripherals",
          "markdownDescription": "Denies the get_discovered_peripherals command without any pre-configured scope."
        },
        {
          "description": "Enables the get_maximum_write_length command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-maximum-write-length",
          "markdownDescription": "Enables the get_maximum_write_length command without any pre-configured scope."
        },
        {
          "description": "Denies the get_maximum_write_length command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-maximum-write-length",
          "markdownDescription": "Denies the get_maximum_write_length command without any pre-configured scope."
        },
        {
          "description": "Enables the get_peripheral_rssi command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-peripheral-rssi",
          "markdownDescription": "Enables the get_peripheral_rssi command without any pre-configured scope."
        },
        {
          "description": "Denies the get_peripheral_rssi command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-peripheral-rssi",
          "markdownDescription": "Denies the get_peripheral_rssi command without any pre-configured scope."
        },
        {
          "description": "Enables the is_bluetooth_enabled command without any pre-configured scope.",
          "type": "string",
          "const": "allow-is-bluetooth-enabled",
          "markdownDescription": "Enables the is_bluetooth_enabled command without any pre-configured scope."
        },
        {
          "description": "Denies the is_bluetooth_enabled command without any pre-configured scope.",
          "type": "string",
          "const": "deny-is-bluetooth-enabled",
          "markdownDescription": "Denies the is_bluetooth_enabled command without any pre-configured scope."
        },
        {
          "description": "Enables the read_characteristic command without any pre-configured scope.",
          "type": "string",
          "const": "allow-read-characteristic",
          "markdownDescription": "Enables the read_characteristic command without any pre-configured scope."
        },
        {
          "description": "Denies the read_characteristic command without any pre-configured scope.",
          "type": "string",
          "const": "deny-read-characteristic",
          "markdownDescription": "Denies the read_characteristic command without any pre-configured scope."
        },
        {
          "description": "Enables the read_descriptor command without any pre-configured scope.",
          "type": "string",
          "const": "allow-read-descriptor",
          "markdownDescription": "Enables the read_descriptor command without any pre-configured scope."
        },
        {
          "description": "Denies the read_descriptor command without any pre-configured scope.",
          "type": "string",
          "const": "deny-read-descriptor",
          "markdownDescription": "Denies the read_descriptor command without any pre-configured scope."
        },
        {
          "description": "Enables the remove_all_services command without any pre-configured scope.",
          "type": "string",
          "const": "allow-remove-all-services",
          "markdownDescription": "Enables the remove_all_services command without any pre-configured scope."
        },
        {
          "description": "Denies the remove_all_services command without any pre-configured scope.",
          "type": "string",
          "const": "deny-remove-all-services",
          "markdownDescription": "Denies the remove_all_services command without any pre-configured scope."
        },
        {
          "description": "Enables the remove_service command without any pre-configured scope.",
          "type": "string",
          "const": "allow-remove-service",
          "markdownDescription": "Enables the remove_service command without any pre-configured scope."
        },
        {
          "description": "Denies the remove_service command without any pre-configured scope.",
          "type": "string",
          "const": "deny-remove-service",
          "markdownDescription": "Denies the remove_service command without any pre-configured scope."
        },
        {
          "description": "Enables the request_authorization command without any pre-configured scope.",
          "type": "string",
          "const": "allow-request-authorization",
          "markdownDescription": "Enables the request_authorization command without any pre-configured scope."
        },
        {
          "description": "Denies the request_authorization command without any pre-configured scope.",
          "type": "string",
          "const": "deny-request-authorization",
          "markdownDescription": "Denies the request_authorization command without any pre-configured scope."
        },
        {
          "description": "Enables the respond_to_request command without any pre-configured scope.",
          "type": "string",
          "const": "allow-respond-to-request",
          "markdownDescription": "Enables the respond_to_request command without any pre-configured scope."
        },
        {
          "description": "Denies the respond_to_request command without any pre-configured scope.",
          "type": "string",
          "const": "deny-respond-to-request",
          "markdownDescription": "Denies the respond_to_request command without any pre-configured scope."
        },
        {
          "description": "Enables the set_notify_value command without any pre-configured scope.",
          "type": "string",
          "const": "allow-set-notify-value",
          "markdownDescription": "Enables the set_notify_value command without any pre-configured scope."
        },
        {
          "description": "Denies the set_notify_value command without any pre-configured scope.",
          "type": "string",
          "const": "deny-set-notify-value",
          "markdownDescription": "Denies the set_notify_value command without any pre-configured scope."
        },
        {
          "description": "Enables the start_central_scan command without any pre-configured scope.",
          "type": "string",
          "const": "allow-start-central-scan",
          "markdownDescription": "Enables the start_central_scan command without any pre-configured scope."
        },
        {
          "description": "Denies the start_central_scan command without any pre-configured scope.",
          "type": "string",
          "const": "deny-start-central-scan",
          "markdownDescription": "Denies the start_central_scan command without any pre-configured scope."
        },
        {
          "description": "Enables the start_peripheral_advertising command without any pre-configured scope.",
          "type": "string",
          "const": "allow-start-peripheral-advertising",
          "markdownDescription": "Enables the start_peripheral_advertising command without any pre-configured scope."
        },
        {
          "description": "Denies the start_peripheral_advertising command without any pre-configured scope.",
          "type": "string",
          "const": "deny-start-peripheral-advertising",
          "markdownDescription": "Denies the start_peripheral_advertising command without any pre-configured scope."
        },
        {
          "description": "Enables the stop_central_scan command without any pre-configured scope.",
          "type": "string",
          "const": "allow-stop-central-scan",
          "markdownDescription": "Enables the stop_central_scan command without any pre-configured scope."
        },
        {
          "description": "Denies the stop_central_scan command without any pre-configured scope.",
          "type": "string",
          "const": "deny-stop-central-scan",
          "markdownDescription": "Denies the stop_central_scan command without any pre-configured scope."
        },
        {
          "description": "Enables the stop_peripheral_advertising command without any pre-configured scope.",
          "type": "string",
          "const": "allow-stop-peripheral-advertising",
          "markdownDescription": "Enables the stop_peripheral_advertising command without any pre-configured scope."
        },
        {
          "description": "Denies the stop_peripheral_advertising command without any pre-configured scope.",
          "type": "string",
          "const": "deny-stop-peripheral-advertising",
          "markdownDescription": "Denies the stop_peripheral_advertising command without any pre-configured scope."
        },
        {
          "description": "Enables the subscribe_to_characteristic command without any pre-configured scope.",
          "type": "string",
          "const": "allow-subscribe-to-characteristic",
          "markdownDescription": "Enables the subscribe_to_characteristic command without any pre-configured scope."
        },
        {
          "description": "Denies the subscribe_to_characteristic command without any pre-configured scope.",
          "type": "string",
          "const": "deny-subscribe-to-characteristic",
          "markdownDescription": "Denies the subscribe_to_characteristic command without any pre-configured scope."
        },
        {
          "description": "Enables the unsubscribe_from_characteristic command without any pre-configured scope.",
          "type": "string",
          "const": "allow-unsubscribe-from-characteristic",
          "markdownDescription": "Enables the unsubscribe_from_characteristic command without any pre-configured scope."
        },
        {
          "description": "Denies the unsubscribe_from_characteristic command without any pre-configured scope.",
          "type": "string",
          "const": "deny-unsubscribe-from-characteristic",
          "markdownDescription": "Denies the unsubscribe_from_characteristic command without any pre-configured scope."
        },
        {
          "description": "Enables the update_characteristic_value command without any pre-configured scope.",
          "type": "string",
          "const": "allow-update-characteristic-value",
          "markdownDescription": "Enables the update_characteristic_value command without any pre-configured scope."
        },
        {
          "description": "Denies the update_characteristic_value command without any pre-configured scope.",
          "type": "string",
          "const": "deny-update-characteristic-value",
          "markdownDescription": "Denies the update_characteristic_value command without any pre-configured scope."
        },
        {
          "description": "Enables the write_characteristic command without any pre-configured scope.",
          "type": "string",
          "const": "allow-write-characteristic",
          "markdownDescription": "Enables the write_characteristic command without any pre-configured scope."
        },
        {
          "description": "Denies the write_characteristic command without any pre-configured scope.",
          "type": "string",
          "const": "deny-write-characteristic",
          "markdownDescription": "Denies the write_characteristic command without any pre-configured scope."
        },
        {
          "description": "Enables the write_descriptor command without any pre-configured scope.",
          "type": "string",
          "const": "allow-write-descriptor",
          "markdownDescription": "Enables the write_descriptor command without any pre-configured scope."
        },
        {
          "description": "Denies the write_descriptor command without any pre-configured scope.",
          "type": "string",
          "const": "deny-write-descriptor",
          "markdownDescription": "Denies the write_descriptor command without any pre-configured scope."
        }
      ]
    }
  }
}